<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.allxone.mybatisprojectbackend.mapper.UserMapper">
    <resultMap id="userResultMap" type="com.allxone.mybatisprojectbackend.model.User" >
        <id property="id" column="id"/>
        <result column="firstname" property="firstname" />
        <result column="lastname" property="lastname" />
        <result column="email" property="email" />
        <result column="role" property="role" />
        <result column="isActive" property="is_active" />
        <result column="gender" property="gender" />
        <result column="address" property="address" />
        <result column="age" property="age" />
        <result column="phoneNumber" property="phone_number" />
        <result property="createdAt" column="created_at" javaType="java.time.Instant"/>
        <result property="updatedAt" column="updated_at" javaType="java.time.Instant"/>
    </resultMap>

    <resultMap id="userResultMapWithTokens" type="com.allxone.mybatisprojectbackend.model.User" >
        <id property="id" column="id"/>
        <result column="firstname" property="firstname" />
        <result column="lastname" property="lastname" />
        <result column="email" property="email" />
        <result column="role" property="role" />
    </resultMap>

    <insert id="saveUser" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (FIRSTNAME, LASTNAME, EMAIL, PASSWORD, ROLE, IS_ACTIVE, GENDER, ADDRESS, AGE, PHONENUMBER, CREATED_AT,
                          UPDATED_AT)
        VALUES (#{firstname}, #{lastname}, #{email}, #{password}, #{role}, false, #{gender}, #{address}, #{age}, #{phoneNumber}, NOW(),
                NOW())
    </insert>

    <select id="getUserById" resultMap="userResultMap" >
        SELECT usr.ID
             , usr.FIRSTNAME
             , usr.LASTNAME
             , usr.EMAIL
             , usr.ROLE
             , usr.IS_ACTIVE
             , usr.GENDER
             , usr.ADDRESS
             , usr.AGE
             , usr.PHONENUMBER
             , usr.CREATED_AT
             , usr.UPDATED_AT
        FROM user usr
        WHERE usr.ID = #{id}
    </select>

    <select id="findByEmail" resultMap="userResultMap" >
        SELECT usr.ID
             , usr.FIRSTNAME
             , usr.LASTNAME
             , usr.IS_ACTIVE
             , usr.EMAIL
             , usr.ROLE
        FROM user usr
        WHERE usr.EMAIL = #{email}
    </select>

    <update id="updateUser" parameterType="Coin" useGeneratedKeys="true" keyProperty="id">
        UPDATE user
        SET FIRSTNAME  = #{firstname},
            LASTNAME   = #{lastname},
            EMAIL      = #{email},
            IS_ACTIVE  = #{isActive},
            GENDER     = #{gender},
            ADDRESS    = #{address},
            AGE        = #{age},
            UPDATED_AT = NOW()
        WHERE ID = #{id}
    </update>

    <delete id="deleteUserById" parameterType="long">
        DELETE FROM user
        WHERE id = #{id}
    </delete>
</mapper>
