package com.allxone.coinmarket.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PayrollExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    public PayrollExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdIsNull() {
            addCriterion("employee_id is null");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdIsNotNull() {
            addCriterion("employee_id is not null");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdEqualTo(Long value) {
            addCriterion("employee_id =", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdNotEqualTo(Long value) {
            addCriterion("employee_id <>", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdGreaterThan(Long value) {
            addCriterion("employee_id >", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdGreaterThanOrEqualTo(Long value) {
            addCriterion("employee_id >=", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdLessThan(Long value) {
            addCriterion("employee_id <", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdLessThanOrEqualTo(Long value) {
            addCriterion("employee_id <=", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdIn(List<Long> values) {
            addCriterion("employee_id in", values, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdNotIn(List<Long> values) {
            addCriterion("employee_id not in", values, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdBetween(Long value1, Long value2) {
            addCriterion("employee_id between", value1, value2, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdNotBetween(Long value1, Long value2) {
            addCriterion("employee_id not between", value1, value2, "employeeId");
            return (Criteria) this;
        }

        public Criteria andSalaryIsNull() {
            addCriterion("salary is null");
            return (Criteria) this;
        }

        public Criteria andSalaryIsNotNull() {
            addCriterion("salary is not null");
            return (Criteria) this;
        }

        public Criteria andSalaryEqualTo(BigDecimal value) {
            addCriterion("salary =", value, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryNotEqualTo(BigDecimal value) {
            addCriterion("salary <>", value, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryGreaterThan(BigDecimal value) {
            addCriterion("salary >", value, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("salary >=", value, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryLessThan(BigDecimal value) {
            addCriterion("salary <", value, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryLessThanOrEqualTo(BigDecimal value) {
            addCriterion("salary <=", value, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryIn(List<BigDecimal> values) {
            addCriterion("salary in", values, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryNotIn(List<BigDecimal> values) {
            addCriterion("salary not in", values, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("salary between", value1, value2, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("salary not between", value1, value2, "salary");
            return (Criteria) this;
        }

        public Criteria andBonusIsNull() {
            addCriterion("bonus is null");
            return (Criteria) this;
        }

        public Criteria andBonusIsNotNull() {
            addCriterion("bonus is not null");
            return (Criteria) this;
        }

        public Criteria andBonusEqualTo(BigDecimal value) {
            addCriterion("bonus =", value, "bonus");
            return (Criteria) this;
        }

        public Criteria andBonusNotEqualTo(BigDecimal value) {
            addCriterion("bonus <>", value, "bonus");
            return (Criteria) this;
        }

        public Criteria andBonusGreaterThan(BigDecimal value) {
            addCriterion("bonus >", value, "bonus");
            return (Criteria) this;
        }

        public Criteria andBonusGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("bonus >=", value, "bonus");
            return (Criteria) this;
        }

        public Criteria andBonusLessThan(BigDecimal value) {
            addCriterion("bonus <", value, "bonus");
            return (Criteria) this;
        }

        public Criteria andBonusLessThanOrEqualTo(BigDecimal value) {
            addCriterion("bonus <=", value, "bonus");
            return (Criteria) this;
        }

        public Criteria andBonusIn(List<BigDecimal> values) {
            addCriterion("bonus in", values, "bonus");
            return (Criteria) this;
        }

        public Criteria andBonusNotIn(List<BigDecimal> values) {
            addCriterion("bonus not in", values, "bonus");
            return (Criteria) this;
        }

        public Criteria andBonusBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("bonus between", value1, value2, "bonus");
            return (Criteria) this;
        }

        public Criteria andBonusNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("bonus not between", value1, value2, "bonus");
            return (Criteria) this;
        }

        public Criteria andDeductionsIsNull() {
            addCriterion("deductions is null");
            return (Criteria) this;
        }

        public Criteria andDeductionsIsNotNull() {
            addCriterion("deductions is not null");
            return (Criteria) this;
        }

        public Criteria andDeductionsEqualTo(BigDecimal value) {
            addCriterion("deductions =", value, "deductions");
            return (Criteria) this;
        }

        public Criteria andDeductionsNotEqualTo(BigDecimal value) {
            addCriterion("deductions <>", value, "deductions");
            return (Criteria) this;
        }

        public Criteria andDeductionsGreaterThan(BigDecimal value) {
            addCriterion("deductions >", value, "deductions");
            return (Criteria) this;
        }

        public Criteria andDeductionsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("deductions >=", value, "deductions");
            return (Criteria) this;
        }

        public Criteria andDeductionsLessThan(BigDecimal value) {
            addCriterion("deductions <", value, "deductions");
            return (Criteria) this;
        }

        public Criteria andDeductionsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("deductions <=", value, "deductions");
            return (Criteria) this;
        }

        public Criteria andDeductionsIn(List<BigDecimal> values) {
            addCriterion("deductions in", values, "deductions");
            return (Criteria) this;
        }

        public Criteria andDeductionsNotIn(List<BigDecimal> values) {
            addCriterion("deductions not in", values, "deductions");
            return (Criteria) this;
        }

        public Criteria andDeductionsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deductions between", value1, value2, "deductions");
            return (Criteria) this;
        }

        public Criteria andDeductionsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deductions not between", value1, value2, "deductions");
            return (Criteria) this;
        }

        public Criteria andNetSalaryIsNull() {
            addCriterion("net_salary is null");
            return (Criteria) this;
        }

        public Criteria andNetSalaryIsNotNull() {
            addCriterion("net_salary is not null");
            return (Criteria) this;
        }

        public Criteria andNetSalaryEqualTo(BigDecimal value) {
            addCriterion("net_salary =", value, "netSalary");
            return (Criteria) this;
        }

        public Criteria andNetSalaryNotEqualTo(BigDecimal value) {
            addCriterion("net_salary <>", value, "netSalary");
            return (Criteria) this;
        }

        public Criteria andNetSalaryGreaterThan(BigDecimal value) {
            addCriterion("net_salary >", value, "netSalary");
            return (Criteria) this;
        }

        public Criteria andNetSalaryGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("net_salary >=", value, "netSalary");
            return (Criteria) this;
        }

        public Criteria andNetSalaryLessThan(BigDecimal value) {
            addCriterion("net_salary <", value, "netSalary");
            return (Criteria) this;
        }

        public Criteria andNetSalaryLessThanOrEqualTo(BigDecimal value) {
            addCriterion("net_salary <=", value, "netSalary");
            return (Criteria) this;
        }

        public Criteria andNetSalaryIn(List<BigDecimal> values) {
            addCriterion("net_salary in", values, "netSalary");
            return (Criteria) this;
        }

        public Criteria andNetSalaryNotIn(List<BigDecimal> values) {
            addCriterion("net_salary not in", values, "netSalary");
            return (Criteria) this;
        }

        public Criteria andNetSalaryBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_salary between", value1, value2, "netSalary");
            return (Criteria) this;
        }

        public Criteria andNetSalaryNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("net_salary not between", value1, value2, "netSalary");
            return (Criteria) this;
        }

        public Criteria andPeriodStartIsNull() {
            addCriterion("period_start is null");
            return (Criteria) this;
        }

        public Criteria andPeriodStartIsNotNull() {
            addCriterion("period_start is not null");
            return (Criteria) this;
        }

        public Criteria andPeriodStartEqualTo(Date value) {
            addCriterionForJDBCDate("period_start =", value, "periodStart");
            return (Criteria) this;
        }

        public Criteria andPeriodStartNotEqualTo(Date value) {
            addCriterionForJDBCDate("period_start <>", value, "periodStart");
            return (Criteria) this;
        }

        public Criteria andPeriodStartGreaterThan(Date value) {
            addCriterionForJDBCDate("period_start >", value, "periodStart");
            return (Criteria) this;
        }

        public Criteria andPeriodStartGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("period_start >=", value, "periodStart");
            return (Criteria) this;
        }

        public Criteria andPeriodStartLessThan(Date value) {
            addCriterionForJDBCDate("period_start <", value, "periodStart");
            return (Criteria) this;
        }

        public Criteria andPeriodStartLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("period_start <=", value, "periodStart");
            return (Criteria) this;
        }

        public Criteria andPeriodStartIn(List<Date> values) {
            addCriterionForJDBCDate("period_start in", values, "periodStart");
            return (Criteria) this;
        }

        public Criteria andPeriodStartNotIn(List<Date> values) {
            addCriterionForJDBCDate("period_start not in", values, "periodStart");
            return (Criteria) this;
        }

        public Criteria andPeriodStartBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("period_start between", value1, value2, "periodStart");
            return (Criteria) this;
        }

        public Criteria andPeriodStartNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("period_start not between", value1, value2, "periodStart");
            return (Criteria) this;
        }

        public Criteria andPeriodEndIsNull() {
            addCriterion("period_end is null");
            return (Criteria) this;
        }

        public Criteria andPeriodEndIsNotNull() {
            addCriterion("period_end is not null");
            return (Criteria) this;
        }

        public Criteria andPeriodEndEqualTo(Date value) {
            addCriterionForJDBCDate("period_end =", value, "periodEnd");
            return (Criteria) this;
        }

        public Criteria andPeriodEndNotEqualTo(Date value) {
            addCriterionForJDBCDate("period_end <>", value, "periodEnd");
            return (Criteria) this;
        }

        public Criteria andPeriodEndGreaterThan(Date value) {
            addCriterionForJDBCDate("period_end >", value, "periodEnd");
            return (Criteria) this;
        }

        public Criteria andPeriodEndGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("period_end >=", value, "periodEnd");
            return (Criteria) this;
        }

        public Criteria andPeriodEndLessThan(Date value) {
            addCriterionForJDBCDate("period_end <", value, "periodEnd");
            return (Criteria) this;
        }

        public Criteria andPeriodEndLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("period_end <=", value, "periodEnd");
            return (Criteria) this;
        }

        public Criteria andPeriodEndIn(List<Date> values) {
            addCriterionForJDBCDate("period_end in", values, "periodEnd");
            return (Criteria) this;
        }

        public Criteria andPeriodEndNotIn(List<Date> values) {
            addCriterionForJDBCDate("period_end not in", values, "periodEnd");
            return (Criteria) this;
        }

        public Criteria andPeriodEndBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("period_end between", value1, value2, "periodEnd");
            return (Criteria) this;
        }

        public Criteria andPeriodEndNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("period_end not between", value1, value2, "periodEnd");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("created_at is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("created_at is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualTo(Date value) {
            addCriterion("created_at =", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualTo(Date value) {
            addCriterion("created_at <>", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThan(Date value) {
            addCriterion("created_at >", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("created_at >=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThan(Date value) {
            addCriterion("created_at <", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(Date value) {
            addCriterion("created_at <=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIn(List<Date> values) {
            addCriterion("created_at in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotIn(List<Date> values) {
            addCriterion("created_at not in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtBetween(Date value1, Date value2) {
            addCriterion("created_at between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotBetween(Date value1, Date value2) {
            addCriterion("created_at not between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNull() {
            addCriterion("updated_at is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNotNull() {
            addCriterion("updated_at is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtEqualTo(Date value) {
            addCriterion("updated_at =", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotEqualTo(Date value) {
            addCriterion("updated_at <>", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThan(Date value) {
            addCriterion("updated_at >", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("updated_at >=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThan(Date value) {
            addCriterion("updated_at <", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanOrEqualTo(Date value) {
            addCriterion("updated_at <=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIn(List<Date> values) {
            addCriterion("updated_at in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotIn(List<Date> values) {
            addCriterion("updated_at not in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtBetween(Date value1, Date value2) {
            addCriterion("updated_at between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotBetween(Date value1, Date value2) {
            addCriterion("updated_at not between", value1, value2, "updatedAt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table payroll
     *
     * @mbg.generated do_not_delete_during_merge Thu Feb 22 09:13:49 ICT 2024
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table payroll
     *
     * @mbg.generated Thu Feb 22 09:13:49 ICT 2024
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}