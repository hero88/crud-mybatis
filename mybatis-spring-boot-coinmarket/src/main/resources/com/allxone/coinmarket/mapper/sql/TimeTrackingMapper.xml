<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.allxone.coinmarket.mapper.TimeTrackingMapper">
  <resultMap id="BaseResultMap" type="com.allxone.coinmarket.model.TimeTracking">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="employee_id" jdbcType="BIGINT" property="employeeId" />
    <result column="date_track" jdbcType="DATE" property="dateTrack" />
    <result column="clock_in" jdbcType="TIME" property="clockIn" />
    <result column="clock_out" jdbcType="TIME" property="clockOut" />
    <result column="total_hours" jdbcType="DECIMAL" property="totalHours" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    id, employee_id, date_track, clock_in, clock_out, total_hours, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.allxone.coinmarket.model.TimeTrackingExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from time_tracking
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    select 
    <include refid="Base_Column_List" />
    from time_tracking
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    delete from time_tracking
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.allxone.coinmarket.model.TimeTrackingExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    delete from time_tracking
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.allxone.coinmarket.model.TimeTracking">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    insert into time_tracking (id, employee_id, date_track, 
      clock_in, clock_out, total_hours, 
      created_at, updated_at)
    values (#{id,jdbcType=BIGINT}, #{employeeId,jdbcType=BIGINT}, #{dateTrack,jdbcType=DATE}, 
      #{clockIn,jdbcType=TIME}, #{clockOut,jdbcType=TIME}, #{totalHours,jdbcType=DECIMAL}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.allxone.coinmarket.model.TimeTracking">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    insert into time_tracking
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="dateTrack != null">
        date_track,
      </if>
      <if test="clockIn != null">
        clock_in,
      </if>
      <if test="clockOut != null">
        clock_out,
      </if>
      <if test="totalHours != null">
        total_hours,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="dateTrack != null">
        #{dateTrack,jdbcType=DATE},
      </if>
      <if test="clockIn != null">
        #{clockIn,jdbcType=TIME},
      </if>
      <if test="clockOut != null">
        #{clockOut,jdbcType=TIME},
      </if>
      <if test="totalHours != null">
        #{totalHours,jdbcType=DECIMAL},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.allxone.coinmarket.model.TimeTrackingExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    select count(*) from time_tracking
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    update time_tracking
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.employeeId != null">
        employee_id = #{row.employeeId,jdbcType=BIGINT},
      </if>
      <if test="row.dateTrack != null">
        date_track = #{row.dateTrack,jdbcType=DATE},
      </if>
      <if test="row.clockIn != null">
        clock_in = #{row.clockIn,jdbcType=TIME},
      </if>
      <if test="row.clockOut != null">
        clock_out = #{row.clockOut,jdbcType=TIME},
      </if>
      <if test="row.totalHours != null">
        total_hours = #{row.totalHours,jdbcType=DECIMAL},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    update time_tracking
    set id = #{row.id,jdbcType=BIGINT},
      employee_id = #{row.employeeId,jdbcType=BIGINT},
      date_track = #{row.dateTrack,jdbcType=DATE},
      clock_in = #{row.clockIn,jdbcType=TIME},
      clock_out = #{row.clockOut,jdbcType=TIME},
      total_hours = #{row.totalHours,jdbcType=DECIMAL},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.allxone.coinmarket.model.TimeTracking">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    update time_tracking
    <set>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="dateTrack != null">
        date_track = #{dateTrack,jdbcType=DATE},
      </if>
      <if test="clockIn != null">
        clock_in = #{clockIn,jdbcType=TIME},
      </if>
      <if test="clockOut != null">
        clock_out = #{clockOut,jdbcType=TIME},
      </if>
      <if test="totalHours != null">
        total_hours = #{totalHours,jdbcType=DECIMAL},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.allxone.coinmarket.model.TimeTracking">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 09:13:49 ICT 2024.
    -->
    update time_tracking
    set employee_id = #{employeeId,jdbcType=BIGINT},
      date_track = #{dateTrack,jdbcType=DATE},
      clock_in = #{clockIn,jdbcType=TIME},
      clock_out = #{clockOut,jdbcType=TIME},
      total_hours = #{totalHours,jdbcType=DECIMAL},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="sumTotalHours" parameterType="java.lang.Long" resultType="BigDecimal">
    SELECT sum(total_hours) FROM time_tracking WHERE employee_id = #{employee_id,jdbcType=BIGINT};
  </select>

  <select id="getEmployeeIdWorkingTime" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT * FROM time_tracking
             where employee_id = #{employee_id,jdbcType=BIGINT}
                  and  month(date_track) = #{month,jdbcType=INTEGER}
                  and year(date_track) = year(current_date())
   </select>
  <select id="findAllWorkingTimeEmployee" resultType="com.allxone.coinmarket.dto.response.WorkingTimeDTO">
    select * from time_tracking ttr
    join employees e on ttr.employee_id = e.id
    where ttr.date_track= #{date}
    order by ttr.clock_out desc limit #{limit}
  </select>

  <select id="findAllWorkingTimeEmployeeAllTime" resultType="com.allxone.coinmarket.dto.response.WorkingTimeDTO">
    select * from time_tracking ttr
    join employees e on ttr.employee_id = e.id
    order by ttr.date_track desc limit #{limit}
  </select>
  <select id="findAllWorkingTimeEmployeeByFilter"
            resultType="com.allxone.coinmarket.dto.response.WorkingTimeDTO">
    select * from time_tracking ttr
    join employees e on ttr.employee_id = e.id
    where e.id in
          <foreach collection="listId" item="id" open="(" separator="," close=")">
            #{id}
            </foreach>
    and ttr.date_track between #{from} and #{to}
    order by ttr.date_track desc limit #{limit}
  </select>
  <select id="sumTotalHoursMonth" parameterType="com.allxone.coinmarket.model.TimeTrackingExample" resultType="java.math.BigDecimal">
    select sum(total_hours) from time_tracking
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <select id="findAllWorkingTimeEmployeeByFilters" parameterType="java.util.Map" resultType="com.allxone.coinmarket.dto.response.WorkingTimeDTO">
  <![CDATA[
    SELECT *
    FROM time_tracking tt
    WHERE tt.date_track BETWEEN #{startDate, jdbcType=DATE} AND #{endDate, jdbcType=DATE}
    ]]>
</select>
</mapper>