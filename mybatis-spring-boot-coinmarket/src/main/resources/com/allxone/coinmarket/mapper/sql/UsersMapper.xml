<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.allxone.coinmarket.mapper.UsersMapper">
  <select id="findByEmailAndType" resultType="Users">
    select * from users where email = #{email} and type= #{type}
  </select>

  <resultMap id="BaseResultMap" type="com.allxone.coinmarket.model.Users">


    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="is_active" jdbcType="BIT" property="active" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="email_verification_at" jdbcType="DATE" property="emailVerificationAt" />
    <result column="remember_token" jdbcType="VARCHAR" property="rememberToken" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.allxone.coinmarket.model.Users">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    <result column="address" jdbcType="LONGVARCHAR" property="address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    id, username, password, name, gender, age, is_active, email, phone_number, email_verification_at, 
    remember_token, created_at, updated_at
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    address
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.allxone.coinmarket.model.UsersExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.allxone.coinmarket.model.UsersExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.allxone.coinmarket.model.UsersExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.allxone.coinmarket.model.Users">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    insert into users (id, username, password,
      name, gender, age, 
      is_active, email, phone_number, 
      email_verification_at, remember_token, created_at, 
      updated_at, address,type)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{active,jdbcType=BIT}, #{email,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, 
      #{emailVerificationAt,jdbcType=DATE}, #{rememberToken,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR},#{type,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.allxone.coinmarket.model.Users">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="active != null">
        is_active,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="emailVerificationAt != null">
        email_verification_at,
      </if>
      <if test="rememberToken != null">
        remember_token,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        #{active,jdbcType=BIT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="emailVerificationAt != null">
        #{emailVerificationAt,jdbcType=DATE},
      </if>
      <if test="rememberToken != null">
        #{rememberToken,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        #{address,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.allxone.coinmarket.model.UsersExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    update users
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.username != null">
        username = #{row.username,jdbcType=VARCHAR},
      </if>
      <if test="row.password != null">
        password = #{row.password,jdbcType=VARCHAR},
      </if>
      <if test="row.name != null">
        name = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.gender != null">
        gender = #{row.gender,jdbcType=VARCHAR},
      </if>
      <if test="row.age != null">
        age = #{row.age,jdbcType=INTEGER},
      </if>
      <if test="row.active != null">
        is_active = #{row.active,jdbcType=BIT},
      </if>
      <if test="row.email != null">
        email = #{row.email,jdbcType=VARCHAR},
      </if>
      <if test="row.phoneNumber != null">
        phone_number = #{row.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="row.emailVerificationAt != null">
        email_verification_at = #{row.emailVerificationAt,jdbcType=DATE},
      </if>
      <if test="row.rememberToken != null">
        remember_token = #{row.rememberToken,jdbcType=VARCHAR},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.address != null">
        address = #{row.address,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    update users
    set id = #{row.id,jdbcType=BIGINT},
      username = #{row.username,jdbcType=VARCHAR},
      password = #{row.password,jdbcType=VARCHAR},
      name = #{row.name,jdbcType=VARCHAR},
      gender = #{row.gender,jdbcType=VARCHAR},
      age = #{row.age,jdbcType=INTEGER},
      is_active = #{row.active,jdbcType=BIT},
      email = #{row.email,jdbcType=VARCHAR},
      phone_number = #{row.phoneNumber,jdbcType=VARCHAR},
      email_verification_at = #{row.emailVerificationAt,jdbcType=DATE},
      remember_token = #{row.rememberToken,jdbcType=VARCHAR},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      address = #{row.address,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 25 09:56:51 ICT 2024.
    -->
    update users
    set id = #{row.id,jdbcType=BIGINT},
      username = #{row.username,jdbcType=VARCHAR},
      password = #{row.password,jdbcType=VARCHAR},
      name = #{row.name,jdbcType=VARCHAR},
      gender = #{row.gender,jdbcType=VARCHAR},
      age = #{row.age,jdbcType=INTEGER},
      is_active = #{row.active,jdbcType=BIT},
      email = #{row.email,jdbcType=VARCHAR},
      phone_number = #{row.phoneNumber,jdbcType=VARCHAR},
      email_verification_at = #{row.emailVerificationAt,jdbcType=DATE},
      remember_token = #{row.rememberToken,jdbcType=VARCHAR},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="findUserByEmail" parameterType="string" resultType="com.allxone.coinmarket.model.Users">
    	select * from users where email = #{email}
  </select>
  
  <select id="findUserByUsername" parameterType="string" resultType="com.allxone.coinmarket.model.Users">
    	select * from users where username = #{userName}
  </select>

  <select id="findAllUser" resultType="com.allxone.coinmarket.model.Users">
    select * from users
  </select>

  <update id="updateUserById" parameterType="com.allxone.coinmarket.model.Users">

    update users
    set
      username = #{row.username,jdbcType=VARCHAR},
      password = #{row.password,jdbcType=VARCHAR},
      name = #{row.name,jdbcType=VARCHAR},
      gender = #{row.gender,jdbcType=VARCHAR},
      age = #{row.age,jdbcType=INTEGER},
      is_active = #{row.active,jdbcType=BIT},
      email = #{row.email,jdbcType=VARCHAR},
      phone_number = #{row.phoneNumber,jdbcType=VARCHAR},
      email_verification_at = #{row.emailVerificationAt,jdbcType=DATE},
      remember_token = #{row.rememberToken,jdbcType=VARCHAR},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    where ID = #{row.id,jdbcType=BIGINT}

  </update>

</mapper>