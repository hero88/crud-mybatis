<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.allxone.coinmarket.mapper.EmployeesMapper">
  <resultMap id="BaseResultMap" type="com.allxone.coinmarket.model.Employees">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="contact_number" jdbcType="VARCHAR" property="contactNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="hire_date" jdbcType="DATE" property="hireDate" />
    <result column="termination_date" jdbcType="DATE" property="terminationDate" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="leave_paid_days" jdbcType="SMALLINT" property="leavePaidDays" />
    <result column="insurance_ids" jdbcType="LONGVARCHAR" property="insuranceIds" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.allxone.coinmarket.model.Employees">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    <result column="insurance_ids" jdbcType="LONGVARCHAR" property="insuranceIds" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    id, user_id, first_name, last_name, birthday, gender, contact_number, email, department_id, 
    position, hire_date, termination_date, created_at, updated_at, leave_paid_days
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    insurance_ids
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.allxone.coinmarket.model.EmployeesExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from employees
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.allxone.coinmarket.model.EmployeesExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employees
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from employees
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    delete from employees
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.allxone.coinmarket.model.EmployeesExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    delete from employees
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.allxone.coinmarket.model.Employees" useGeneratedKeys="true" keyProperty="id"
          keyColumn="id" >
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    insert into employees (id, user_id, first_name, 
      last_name, birthday, gender, 
      contact_number, email, department_id, 
      position, hire_date, termination_date, 
      created_at, updated_at, leave_paid_days, 
      insurance_ids)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{firstName,jdbcType=VARCHAR}, 
      #{lastName,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{gender,jdbcType=VARCHAR}, 
      #{contactNumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, 
      #{position,jdbcType=VARCHAR}, #{hireDate,jdbcType=DATE}, #{terminationDate,jdbcType=DATE}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{leavePaidDays,jdbcType=SMALLINT}, 
      #{insuranceIds,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.allxone.coinmarket.model.Employees">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    insert into employees
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="firstName != null">
        first_name,
      </if>
      <if test="lastName != null">
        last_name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="contactNumber != null">
        contact_number,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="hireDate != null">
        hire_date,
      </if>
      <if test="terminationDate != null">
        termination_date,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="leavePaidDays != null">
        leave_paid_days,
      </if>
      <if test="insuranceIds != null">
        insurance_ids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="contactNumber != null">
        #{contactNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="hireDate != null">
        #{hireDate,jdbcType=DATE},
      </if>
      <if test="terminationDate != null">
        #{terminationDate,jdbcType=DATE},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="leavePaidDays != null">
        #{leavePaidDays,jdbcType=SMALLINT},
      </if>
      <if test="insuranceIds != null">
        #{insuranceIds,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.allxone.coinmarket.model.EmployeesExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    select count(*) from employees
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    update employees
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=BIGINT},
      </if>
      <if test="row.firstName != null">
        first_name = #{row.firstName,jdbcType=VARCHAR},
      </if>
      <if test="row.lastName != null">
        last_name = #{row.lastName,jdbcType=VARCHAR},
      </if>
      <if test="row.birthday != null">
        birthday = #{row.birthday,jdbcType=DATE},
      </if>
      <if test="row.gender != null">
        gender = #{row.gender,jdbcType=VARCHAR},
      </if>
      <if test="row.contactNumber != null">
        contact_number = #{row.contactNumber,jdbcType=VARCHAR},
      </if>
      <if test="row.email != null">
        email = #{row.email,jdbcType=VARCHAR},
      </if>
      <if test="row.departmentId != null">
        department_id = #{row.departmentId,jdbcType=INTEGER},
      </if>
      <if test="row.position != null">
        position = #{row.position,jdbcType=VARCHAR},
      </if>
      <if test="row.hireDate != null">
        hire_date = #{row.hireDate,jdbcType=DATE},
      </if>
      <if test="row.terminationDate != null">
        termination_date = #{row.terminationDate,jdbcType=DATE},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.leavePaidDays != null">
        leave_paid_days = #{row.leavePaidDays,jdbcType=SMALLINT},
      </if>
      <if test="row.insuranceIds != null">
        insurance_ids = #{row.insuranceIds,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    update employees
    set id = #{row.id,jdbcType=BIGINT},
      user_id = #{row.userId,jdbcType=BIGINT},
      first_name = #{row.firstName,jdbcType=VARCHAR},
      last_name = #{row.lastName,jdbcType=VARCHAR},
      birthday = #{row.birthday,jdbcType=DATE},
      gender = #{row.gender,jdbcType=VARCHAR},
      contact_number = #{row.contactNumber,jdbcType=VARCHAR},
      email = #{row.email,jdbcType=VARCHAR},
      department_id = #{row.departmentId,jdbcType=INTEGER},
      position = #{row.position,jdbcType=VARCHAR},
      hire_date = #{row.hireDate,jdbcType=DATE},
      termination_date = #{row.terminationDate,jdbcType=DATE},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      leave_paid_days = #{row.leavePaidDays,jdbcType=SMALLINT},
      insurance_ids = #{row.insuranceIds,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    update employees
    set id = #{row.id,jdbcType=BIGINT},
      user_id = #{row.userId,jdbcType=BIGINT},
      first_name = #{row.firstName,jdbcType=VARCHAR},
      last_name = #{row.lastName,jdbcType=VARCHAR},
      birthday = #{row.birthday,jdbcType=DATE},
      gender = #{row.gender,jdbcType=VARCHAR},
      contact_number = #{row.contactNumber,jdbcType=VARCHAR},
      email = #{row.email,jdbcType=VARCHAR},
      department_id = #{row.departmentId,jdbcType=INTEGER},
      position = #{row.position,jdbcType=VARCHAR},
      hire_date = #{row.hireDate,jdbcType=DATE},
      termination_date = #{row.terminationDate,jdbcType=DATE},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      leave_paid_days = #{row.leavePaidDays,jdbcType=SMALLINT},
      insurance_ids = #{row.insuranceIds,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.allxone.coinmarket.model.Employees">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    update employees
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="firstName != null">
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="contactNumber != null">
        contact_number = #{contactNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="hireDate != null">
        hire_date = #{hireDate,jdbcType=DATE},
      </if>
      <if test="terminationDate != null">
        termination_date = #{terminationDate,jdbcType=DATE},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="leavePaidDays != null">
        leave_paid_days = #{leavePaidDays,jdbcType=SMALLINT},
      </if>
      <if test="insuranceIds != null">
        insurance_ids = #{insuranceIds,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.allxone.coinmarket.model.Employees">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    update employees
    set user_id = #{userId,jdbcType=BIGINT},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      gender = #{gender,jdbcType=VARCHAR},
      contact_number = #{contactNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      position = #{position,jdbcType=VARCHAR},
      hire_date = #{hireDate,jdbcType=DATE},
      termination_date = #{terminationDate,jdbcType=DATE},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      leave_paid_days = #{leavePaidDays,jdbcType=SMALLINT},
      insurance_ids = #{insuranceIds,jdbcType=LONGVARCHAR},
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.allxone.coinmarket.model.Employees">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 01 15:10:41 ICT 2024.
    -->
    update employees
    set user_id = #{userId,jdbcType=BIGINT},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      gender = #{gender,jdbcType=VARCHAR},
      contact_number = #{contactNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      position = #{position,jdbcType=VARCHAR},
      hire_date = #{hireDate,jdbcType=DATE},
      termination_date = #{terminationDate,jdbcType=DATE},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      leave_paid_days = #{leavePaidDays,jdbcType=SMALLINT},
      insurance_ids = #{insuranceIds,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="findAllEmployeeNotTermination" resultType="com.allxone.coinmarket.dto.response.EmployeeDTO">
        select * from employees where termination_date is null
    </select>

    <select id="getAllEmployees" resultMap="BaseResultMap">
        SELECT * FROM coinmaster.employees
    </select>

    <select id="getEmployees" parameterType="map" resultMap="BaseResultMap">
        SELECT * FROM employees
        ORDER BY created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>
</mapper>