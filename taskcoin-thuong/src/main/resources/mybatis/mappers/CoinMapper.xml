<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.CoinMapper">
    <resultMap id="CoinResultMap" type="Coin">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="symbol" property="symbol"/>
        <result column="coinmarket_id" property="coinMarketId"/>
        <result column="quantity" property="quantity" />
        <result column="user_id" property="userId"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>
    
    
    
    
    <sql id="Base_Column_List">
        id
        , name, symbol, coinmarket_id, quantity, user_id, created_at, updated_at
    </sql>
    
    
    
    <select id="findAll" resultMap="CoinResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM coins
    </select>
    
    
    
    
    <insert id="insert" parameterType="Coin">
        INSERT INTO Coins(id, name, symbol, coinmarket_id, quantity, user_id)
        VALUES (#{id}, #{name}, #{symbol}, #{coinMarketId}, #{quantity}, #{userId})
    </insert>

    <select id="findById" resultMap="CoinResultMap" parameterType="long">
        SELECT
        <include refid="Base_Column_List"/>
        FROM coins
        where id = #{id}
    </select>
    <update id="update" parameterType="Coin">
        Update coins
        set id=#{id},
        	name=#{name},
        	symbol=#{symbol},
        	coinmarket_id=#{coinmarketId},
        	quantity=#{quantity},
        	user_id=#{userId},
            created_at=#{createdAt},
            updated_at=#{updatedAt}
        where id = #{id}
    </update>
    <delete id="deleteById" parameterType="long">
        DELETE
        FROM coins
        WHERE id = #{id}
    </delete>
    <delete id="deleteAll">
        DELETE
        FROM coins
    </delete>
</mapper>